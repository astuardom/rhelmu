{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\astuardo\\\\Downloads\\\\project\\\\src\\\\components\\\\ControlChecklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\nconst ControlChecklist = ({\n  controles = [],\n  onUpdate\n}) => {\n  _s();\n  const [localControles, setLocalControles] = useState([]);\n  const currentYear = new Date().getFullYear();\n  useEffect(() => {\n    const existingYear = controles.find(c => c.year === currentYear);\n    if (!existingYear) {\n      const newControles = [...controles, {\n        year: currentYear,\n        months: monthNames.map(m => ({\n          month: m,\n          attended: false\n        }))\n      }];\n      setLocalControles(newControles);\n      onUpdate(newControles);\n    } else {\n      setLocalControles(controles);\n    }\n  }, [controles, onUpdate, currentYear]);\n  const toggleCheck = (year, monthName) => {\n    const updated = localControles.map(control => {\n      if (control.year === year) {\n        return {\n          ...control,\n          months: control.months.map(m => m.month === monthName ? {\n            ...m,\n            attended: !m.attended\n          } : m)\n        };\n      }\n      return control;\n    });\n    setLocalControles(updated);\n    onUpdate(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"Historial de Controles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), localControles.filter(control => control.year === currentYear).map(control => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-md font-semibold mb-2\",\n        children: [\"A\\xF1o \", control.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n        children: control.months.map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm w-20\",\n            children: month.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleCheck(control.year, month.month),\n            className: `px-2 py-1 rounded text-xs ${month.attended ? 'bg-green-500' : 'bg-red-500'} text-white`,\n            children: month.attended ? 'Asistió' : 'No asistió'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this)]\n        }, month.month, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, control.year, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ControlChecklist, \"QPUV60IMnLt6doYECa0rDb/YS5U=\");\n_c = ControlChecklist;\nexport default ControlChecklist;\nvar _c;\n$RefreshReg$(_c, \"ControlChecklist\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","monthNames","ControlChecklist","controles","onUpdate","_s","localControles","setLocalControles","currentYear","Date","getFullYear","existingYear","find","c","year","newControles","months","map","m","month","attended","toggleCheck","monthName","updated","control","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","onClick","_c","$RefreshReg$"],"sources":["C:/Users/astuardo/Downloads/project/src/components/ControlChecklist.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n\nconst monthNames = [\n  'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\n  'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\n];\n\nconst ControlChecklist = ({ controles = [], onUpdate }) => {\n  const [localControles, setLocalControles] = useState([]);\n  const currentYear = new Date().getFullYear();\n\n  useEffect(() => {\n    const existingYear = controles.find(c => c.year === currentYear);\n    if (!existingYear) {\n      const newControles = [\n        ...controles,\n        {\n          year: currentYear,\n          months: monthNames.map(m => ({ month: m, attended: false }))\n        }\n      ];\n      setLocalControles(newControles);\n      onUpdate(newControles);\n    } else {\n      setLocalControles(controles);\n    }\n  }, [controles, onUpdate, currentYear]);\n\n  const toggleCheck = (year, monthName) => {\n    const updated = localControles.map(control => {\n      if (control.year === year) {\n        return {\n          ...control,\n          months: control.months.map(m => m.month === monthName ? { ...m, attended: !m.attended } : m)\n        };\n      }\n      return control;\n    });\n    setLocalControles(updated);\n    onUpdate(updated);\n  };\n\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow\">\n      <h3 className=\"text-lg font-semibold mb-4\">Historial de Controles</h3>\n      {localControles\n        .filter(control => control.year === currentYear)\n        .map(control => (\n          <div key={control.year} className=\"mb-6\">\n            <h4 className=\"text-md font-semibold mb-2\">Año {control.year}</h4>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {control.months.map(month => (\n                <div key={month.month} className=\"flex items-center space-x-2\">\n                  <span className=\"text-sm w-20\">{month.month}</span>\n                  <button\n                    onClick={() => toggleCheck(control.year, month.month)}\n                    className={`px-2 py-1 rounded text-xs ${month.attended ? 'bg-green-500' : 'bg-red-500'} text-white`}\n                  >\n                    {month.attended ? 'Asistió' : 'No asistió'}\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default ControlChecklist;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}