{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\astuardo\\\\Downloads\\\\project\\\\src\\\\components\\\\ControlChecklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\nconst ControlChecklist = ({\n  controles = [],\n  onUpdate\n}) => {\n  _s();\n  const [localControles, setLocalControles] = useState([]);\n  const currentYear = new Date().getFullYear();\n  useEffect(() => {\n    if (controles.length === 0) {\n      const newControles = [{\n        year: currentYear,\n        months: monthNames.map(m => ({\n          month: m,\n          attended: false\n        }))\n      }];\n      setLocalControles(newControles);\n      onUpdate(newControles);\n    } else {\n      setLocalControles(controles);\n    }\n  }, [controles, onUpdate, currentYear]);\n  const toggleCheck = (year, monthName) => {\n    const updated = localControles.map(control => {\n      if (control.year === year) {\n        return {\n          ...control,\n          months: control.months.map(m => m.month === monthName ? {\n            ...m,\n            attended: !m.attended\n          } : m)\n        };\n      }\n      return control;\n    });\n    setLocalControles(updated);\n    onUpdate(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"Historial de Controles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), localControles.filter(control => control.year === currentYear).map(control => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-md font-semibold mb-2\",\n        children: [\"A\\xF1o \", control.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n        children: control.months.map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm w-20\",\n            children: month.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleCheck(control.year, month.month),\n            className: `px-2 py-1 rounded text-xs ${month.attended ? 'bg-green-500 text-white' : 'bg-red-500 text-white'}`,\n            children: month.attended ? 'Asistió' : 'No asistió'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)]\n        }, month.month, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, control.year, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ControlChecklist, \"QPUV60IMnLt6doYECa0rDb/YS5U=\");\n_c = ControlChecklist;\nexport default ControlChecklist;\nvar _c;\n$RefreshReg$(_c, \"ControlChecklist\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","monthNames","ControlChecklist","controles","onUpdate","_s","localControles","setLocalControles","currentYear","Date","getFullYear","length","newControles","year","months","map","m","month","attended","toggleCheck","monthName","updated","control","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","onClick","_c","$RefreshReg$"],"sources":["C:/Users/astuardo/Downloads/project/src/components/ControlChecklist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst monthNames = [\r\n  'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\r\n  'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\r\n];\r\n\r\nconst ControlChecklist = ({ controles = [], onUpdate }) => {\r\n  const [localControles, setLocalControles] = useState([]);\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  useEffect(() => {\r\n    if (controles.length === 0) {\r\n      const newControles = [\r\n        {\r\n          year: currentYear,\r\n          months: monthNames.map(m => ({ month: m, attended: false }))\r\n        }\r\n      ];\r\n      setLocalControles(newControles);\r\n      onUpdate(newControles);\r\n    } else {\r\n      setLocalControles(controles);\r\n    }\r\n  }, [controles, onUpdate, currentYear]);\r\n\r\n  const toggleCheck = (year, monthName) => {\r\n    const updated = localControles.map(control => {\r\n      if (control.year === year) {\r\n        return {\r\n          ...control,\r\n          months: control.months.map(m => m.month === monthName ? { ...m, attended: !m.attended } : m)\r\n        };\r\n      }\r\n      return control;\r\n    });\r\n    setLocalControles(updated);\r\n    onUpdate(updated);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded-lg shadow\">\r\n      <h3 className=\"text-lg font-semibold mb-4\">Historial de Controles</h3>\r\n      {localControles\r\n        .filter(control => control.year === currentYear)\r\n        .map(control => (\r\n          <div key={control.year} className=\"mb-6\">\r\n            <h4 className=\"text-md font-semibold mb-2\">Año {control.year}</h4>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n              {control.months.map(month => (\r\n                <div key={month.month} className=\"flex items-center space-x-2\">\r\n                  <span className=\"text-sm w-20\">{month.month}</span>\r\n                  <button\r\n                    onClick={() => toggleCheck(control.year, month.month)}\r\n                    className={`px-2 py-1 rounded text-xs ${month.attended ? 'bg-green-500 text-white' : 'bg-red-500 text-white'}`}\r\n                  >\r\n                    {month.attended ? 'Asistió' : 'No asistió'}\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlChecklist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}