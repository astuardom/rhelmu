{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\astuardo\\\\Downloads\\\\project\\\\src\\\\components\\\\PatientDetailView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ControlChecklist from './ControlChecklist';\nimport MedicalRecord from './MedicalRecord';\nimport FichaOrtodoncia from './FichaOrtodoncia';\nimport Odontograma from './Odontograma';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientDetailView = ({\n  patient,\n  onUpdateHistorial\n}) => {\n  _s();\n  const [editingHistorial, setEditingHistorial] = useState(false);\n  if (!patient) return null;\n  const updateControles = async newControles => {\n    try {\n      await fetch(`http://localhost:5000/api/pacientes/${patient._id}/controles`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          controles: newControles\n        })\n      });\n    } catch (err) {\n      console.error('Error al actualizar controles:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-2\",\n        children: [\"Detalle de \", patient.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlChecklist, {\n      controles: patient.controles || [],\n      onUpdate: updateControles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientDetailView, \"Xv854UTAO7bs2rDdKZTxgFbliGA=\");\n_c = PatientDetailView;\nexport default PatientDetailView;\nvar _c;\n$RefreshReg$(_c, \"PatientDetailView\");","map":{"version":3,"names":["React","useState","ControlChecklist","MedicalRecord","FichaOrtodoncia","Odontograma","jsxDEV","_jsxDEV","PatientDetailView","patient","onUpdateHistorial","_s","editingHistorial","setEditingHistorial","updateControles","newControles","fetch","_id","method","headers","body","JSON","stringify","controles","err","console","error","className","children","nombre","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/astuardo/Downloads/project/src/components/PatientDetailView.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport ControlChecklist from './ControlChecklist';\nimport MedicalRecord from './MedicalRecord';\nimport FichaOrtodoncia from './FichaOrtodoncia';\nimport Odontograma from './Odontograma';\n\nconst PatientDetailView = ({ patient, onUpdateHistorial }) => {\n  const [editingHistorial, setEditingHistorial] = useState(false);\n\n  if (!patient) return null;\n\n  const updateControles = async (newControles) => {\n    try {\n      await fetch(`http://localhost:5000/api/pacientes/${patient._id}/controles`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ controles: newControles })\n      });\n    } catch (err) {\n      console.error('Error al actualizar controles:', err);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white p-4 rounded-lg shadow\">\n        <h2 className=\"text-2xl font-semibold mb-2\">Detalle de {patient.nombre}</h2>\n        {/* Otros detalles del paciente */}\n      </div>\n\n      <ControlChecklist controles={patient.controles || []} onUpdate={updateControles} />\n\n      {/* Otros componentes como MedicalRecord, Odontograma, FichaOrtodoncia */}\n    </div>\n  );\n};\n\nexport default PatientDetailView;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/D,IAAI,CAACQ,OAAO,EAAE,OAAO,IAAI;EAEzB,MAAMK,eAAe,GAAG,MAAOC,YAAY,IAAK;IAC9C,IAAI;MACF,MAAMC,KAAK,CAAC,uCAAuCP,OAAO,CAACQ,GAAG,YAAY,EAAE;QAC1EC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,SAAS,EAAER;QAAa,CAAC;MAClD,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;IACtD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrB,OAAA;MAAKoB,SAAS,EAAC,gCAAgC;MAAAC,QAAA,eAC7CrB,OAAA;QAAIoB,SAAS,EAAC,6BAA6B;QAAAC,QAAA,GAAC,aAAW,EAACnB,OAAO,CAACoB,MAAM;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzE,CAAC,eAEN1B,OAAA,CAACL,gBAAgB;MAACqB,SAAS,EAAEd,OAAO,CAACc,SAAS,IAAI,EAAG;MAACW,QAAQ,EAAEpB;IAAgB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGhF,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7BIH,iBAAiB;AAAA2B,EAAA,GAAjB3B,iBAAiB;AA+BvB,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}